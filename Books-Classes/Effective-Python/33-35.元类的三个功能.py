 # -*- coding:utf-8 -*-

###33.用元类来验证子类
 '''
元类可以验证某个类定义得是否正确。
开发者一般吧验证代码放在本类的__init__方法里运行，这是由于程序在构建该类的对象时会调用。
但用元类来验证可以把验证时机再往前提一点
 '''


 '''
通过元类，我们可以在生成子类对象之前，先验证子类的定义是否合乎规范

py2和3指定元类的语法略有不同

python系统把子类的整个class语句体处理完毕之后，就会调用元类的__new__方法
 '''

###34.用元类来注册子类
'''
元类可以在程序中自动注册类型。
对于需要反向查找(reverse lookup)的场合很有用。
'''

'''
在构建模块化的python程序时，类的注册是一种很有用的模式

开发者每次从基类中继承子类时，基类的元类都可以自动运行注册代码

通过元类来实现类的注册，可以确保所有子类都不遗漏，避免后续错误
'''

###35.用元类注解类的属性
'''
元类可以在某个刚定义好但是尚未使用的时候，提前修改或注解该类的属性。
这种写法通常会与描述符搭配起来，令这些属性可以更详细地了解自己在外围类中的使用方式。
'''

'''
借助元类，我们可以在某个类完全定义好之前，率先修改该类的属性

描述符与元类能够有效地组合起来，以便对某种行为作出修饰，或在程序运行时探查相关信息

如果把元类与描述符相结合，那就可以在不使用weakred模块的前提下避免内存泄露
'''
